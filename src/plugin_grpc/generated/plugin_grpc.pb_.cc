// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: plugin_grpc.proto

#include "plugin_grpc.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace plugin_grpc {
constexpr MessageSubscribeTo::MessageSubscribeTo(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : updated_block_tip_(false)
  , transaction_added_to_mempool_(false)
  , transaction_removed_from_mempool_(false)
  , block_connected_(false)
  , block_disconnected_(false)
  , chain_state_flushed_(false)
  , block_checked_(false)
  , new_pow_valid_block_(false){}
struct MessageSubscribeToDefaultTypeInternal {
  constexpr MessageSubscribeToDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~MessageSubscribeToDefaultTypeInternal() {}
  union {
    MessageSubscribeTo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT MessageSubscribeToDefaultTypeInternal _MessageSubscribeTo_default_instance_;
constexpr Message::Message(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : _oneof_case_{}{}
struct MessageDefaultTypeInternal {
  constexpr MessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~MessageDefaultTypeInternal() {}
  union {
    Message _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT MessageDefaultTypeInternal _Message_default_instance_;
constexpr Block::Block(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : metadata_()
  , txs_()
  , header_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct BlockDefaultTypeInternal {
  constexpr BlockDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BlockDefaultTypeInternal() {}
  union {
    Block _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BlockDefaultTypeInternal _Block_default_instance_;
constexpr Coin::Coin(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : script_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , amount_(PROTOBUF_ULONGLONG(0))
  , height_(0)
  , is_coinbase_(false){}
struct CoinDefaultTypeInternal {
  constexpr CoinDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CoinDefaultTypeInternal() {}
  union {
    Coin _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CoinDefaultTypeInternal _Coin_default_instance_;
constexpr BlockMetadata::BlockMetadata(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : field_value_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , field_id_(0u){}
struct BlockMetadataDefaultTypeInternal {
  constexpr BlockMetadataDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BlockMetadataDefaultTypeInternal() {}
  union {
    BlockMetadata _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BlockMetadataDefaultTypeInternal _BlockMetadata_default_instance_;
constexpr BlockIdentifier::BlockIdentifier(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : _oneof_case_{}{}
struct BlockIdentifierDefaultTypeInternal {
  constexpr BlockIdentifierDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BlockIdentifierDefaultTypeInternal() {}
  union {
    BlockIdentifier _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BlockIdentifierDefaultTypeInternal _BlockIdentifier_default_instance_;
constexpr UpdatedBlockTip::UpdatedBlockTip(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : blockhash_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct UpdatedBlockTipDefaultTypeInternal {
  constexpr UpdatedBlockTipDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UpdatedBlockTipDefaultTypeInternal() {}
  union {
    UpdatedBlockTip _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UpdatedBlockTipDefaultTypeInternal _UpdatedBlockTip_default_instance_;
constexpr TransactionAddedToMempool::TransactionAddedToMempool(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : tx_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct TransactionAddedToMempoolDefaultTypeInternal {
  constexpr TransactionAddedToMempoolDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~TransactionAddedToMempoolDefaultTypeInternal() {}
  union {
    TransactionAddedToMempool _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT TransactionAddedToMempoolDefaultTypeInternal _TransactionAddedToMempool_default_instance_;
constexpr TransactionRemovedFromMempool::TransactionRemovedFromMempool(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : txid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct TransactionRemovedFromMempoolDefaultTypeInternal {
  constexpr TransactionRemovedFromMempoolDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~TransactionRemovedFromMempoolDefaultTypeInternal() {}
  union {
    TransactionRemovedFromMempool _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT TransactionRemovedFromMempoolDefaultTypeInternal _TransactionRemovedFromMempool_default_instance_;
constexpr BlockConnected::BlockConnected(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : metadata_()
  , txids_()
  , blockheader_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct BlockConnectedDefaultTypeInternal {
  constexpr BlockConnectedDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BlockConnectedDefaultTypeInternal() {}
  union {
    BlockConnected _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BlockConnectedDefaultTypeInternal _BlockConnected_default_instance_;
constexpr BlockDisconnected::BlockDisconnected(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : blockhash_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct BlockDisconnectedDefaultTypeInternal {
  constexpr BlockDisconnectedDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BlockDisconnectedDefaultTypeInternal() {}
  union {
    BlockDisconnected _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BlockDisconnectedDefaultTypeInternal _BlockDisconnected_default_instance_;
constexpr ChainStateFlushed::ChainStateFlushed(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : blockhash_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ChainStateFlushedDefaultTypeInternal {
  constexpr ChainStateFlushedDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ChainStateFlushedDefaultTypeInternal() {}
  union {
    ChainStateFlushed _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ChainStateFlushedDefaultTypeInternal _ChainStateFlushed_default_instance_;
constexpr BlockChecked::BlockChecked(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : blockhash_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , validation_state_(nullptr){}
struct BlockCheckedDefaultTypeInternal {
  constexpr BlockCheckedDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BlockCheckedDefaultTypeInternal() {}
  union {
    BlockChecked _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BlockCheckedDefaultTypeInternal _BlockChecked_default_instance_;
constexpr BlockValidationState::BlockValidationState(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : state_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , reason_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct BlockValidationStateDefaultTypeInternal {
  constexpr BlockValidationStateDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BlockValidationStateDefaultTypeInternal() {}
  union {
    BlockValidationState _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BlockValidationStateDefaultTypeInternal _BlockValidationState_default_instance_;
constexpr NewPoWValidBlock::NewPoWValidBlock(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : blockheader_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct NewPoWValidBlockDefaultTypeInternal {
  constexpr NewPoWValidBlockDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~NewPoWValidBlockDefaultTypeInternal() {}
  union {
    NewPoWValidBlock _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT NewPoWValidBlockDefaultTypeInternal _NewPoWValidBlock_default_instance_;
constexpr GetBlockRequest::GetBlockRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : block_id_(nullptr){}
struct GetBlockRequestDefaultTypeInternal {
  constexpr GetBlockRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetBlockRequestDefaultTypeInternal() {}
  union {
    GetBlockRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetBlockRequestDefaultTypeInternal _GetBlockRequest_default_instance_;
constexpr GetBlockResponse::GetBlockResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : block_(nullptr){}
struct GetBlockResponseDefaultTypeInternal {
  constexpr GetBlockResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetBlockResponseDefaultTypeInternal() {}
  union {
    GetBlockResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetBlockResponseDefaultTypeInternal _GetBlockResponse_default_instance_;
constexpr GetBlockUndoDataRequest::GetBlockUndoDataRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : block_id_(nullptr){}
struct GetBlockUndoDataRequestDefaultTypeInternal {
  constexpr GetBlockUndoDataRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetBlockUndoDataRequestDefaultTypeInternal() {}
  union {
    GetBlockUndoDataRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetBlockUndoDataRequestDefaultTypeInternal _GetBlockUndoDataRequest_default_instance_;
constexpr GetBlockUndoDataResponse::GetBlockUndoDataResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : coins_(){}
struct GetBlockUndoDataResponseDefaultTypeInternal {
  constexpr GetBlockUndoDataResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetBlockUndoDataResponseDefaultTypeInternal() {}
  union {
    GetBlockUndoDataResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetBlockUndoDataResponseDefaultTypeInternal _GetBlockUndoDataResponse_default_instance_;
constexpr GetMempoolRequest::GetMempoolRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct GetMempoolRequestDefaultTypeInternal {
  constexpr GetMempoolRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetMempoolRequestDefaultTypeInternal() {}
  union {
    GetMempoolRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetMempoolRequestDefaultTypeInternal _GetMempoolRequest_default_instance_;
constexpr GetMempoolResponse::GetMempoolResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : txs_(){}
struct GetMempoolResponseDefaultTypeInternal {
  constexpr GetMempoolResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetMempoolResponseDefaultTypeInternal() {}
  union {
    GetMempoolResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetMempoolResponseDefaultTypeInternal _GetMempoolResponse_default_instance_;
constexpr MempoolTx::MempoolTx(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : tx_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct MempoolTxDefaultTypeInternal {
  constexpr MempoolTxDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~MempoolTxDefaultTypeInternal() {}
  union {
    MempoolTx _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT MempoolTxDefaultTypeInternal _MempoolTx_default_instance_;
}  // namespace plugin_grpc
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_plugin_5fgrpc_2eproto[22];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_plugin_5fgrpc_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_plugin_5fgrpc_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_plugin_5fgrpc_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::plugin_grpc::MessageSubscribeTo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::plugin_grpc::MessageSubscribeTo, updated_block_tip_),
  PROTOBUF_FIELD_OFFSET(::plugin_grpc::MessageSubscribeTo, transaction_added_to_mempool_),
  PROTOBUF_FIELD_OFFSET(::plugin_grpc::MessageSubscribeTo, transaction_removed_from_mempool_),
  PROTOBUF_FIELD_OFFSET(::plugin_grpc::MessageSubscribeTo, block_connected_),
  PROTOBUF_FIELD_OFFSET(::plugin_grpc::MessageSubscribeTo, block_disconnected_),
  PROTOBUF_FIELD_OFFSET(::plugin_grpc::MessageSubscribeTo, chain_state_flushed_),
  PROTOBUF_FIELD_OFFSET(::plugin_grpc::MessageSubscribeTo, block_checked_),
  PROTOBUF_FIELD_OFFSET(::plugin_grpc::MessageSubscribeTo, new_pow_valid_block_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::plugin_grpc::Message, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::plugin_grpc::Message, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::plugin_grpc::Message, message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::plugin_grpc::Block, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::plugin_grpc::Block, header_),
  PROTOBUF_FIELD_OFFSET(::plugin_grpc::Block, metadata_),
  PROTOBUF_FIELD_OFFSET(::plugin_grpc::Block, txs_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::plugin_grpc::Coin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::plugin_grpc::Coin, amount_),
  PROTOBUF_FIELD_OFFSET(::plugin_grpc::Coin, script_),
  PROTOBUF_FIELD_OFFSET(::plugin_grpc::Coin, height_),
  PROTOBUF_FIELD_OFFSET(::plugin_grpc::Coin, is_coinbase_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::plugin_grpc::BlockMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::plugin_grpc::BlockMetadata, field_id_),
  PROTOBUF_FIELD_OFFSET(::plugin_grpc::BlockMetadata, field_value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::plugin_grpc::BlockIdentifier, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::plugin_grpc::BlockIdentifier, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::plugin_grpc::BlockIdentifier, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::plugin_grpc::UpdatedBlockTip, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::plugin_grpc::UpdatedBlockTip, blockhash_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::plugin_grpc::TransactionAddedToMempool, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::plugin_grpc::TransactionAddedToMempool, tx_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::plugin_grpc::TransactionRemovedFromMempool, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::plugin_grpc::TransactionRemovedFromMempool, txid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::plugin_grpc::BlockConnected, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::plugin_grpc::BlockConnected, blockheader_),
  PROTOBUF_FIELD_OFFSET(::plugin_grpc::BlockConnected, metadata_),
  PROTOBUF_FIELD_OFFSET(::plugin_grpc::BlockConnected, txids_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::plugin_grpc::BlockDisconnected, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::plugin_grpc::BlockDisconnected, blockhash_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::plugin_grpc::ChainStateFlushed, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::plugin_grpc::ChainStateFlushed, blockhash_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::plugin_grpc::BlockChecked, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::plugin_grpc::BlockChecked, blockhash_),
  PROTOBUF_FIELD_OFFSET(::plugin_grpc::BlockChecked, validation_state_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::plugin_grpc::BlockValidationState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::plugin_grpc::BlockValidationState, state_),
  PROTOBUF_FIELD_OFFSET(::plugin_grpc::BlockValidationState, reason_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::plugin_grpc::NewPoWValidBlock, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::plugin_grpc::NewPoWValidBlock, blockheader_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::plugin_grpc::GetBlockRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::plugin_grpc::GetBlockRequest, block_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::plugin_grpc::GetBlockResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::plugin_grpc::GetBlockResponse, block_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::plugin_grpc::GetBlockUndoDataRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::plugin_grpc::GetBlockUndoDataRequest, block_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::plugin_grpc::GetBlockUndoDataResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::plugin_grpc::GetBlockUndoDataResponse, coins_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::plugin_grpc::GetMempoolRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::plugin_grpc::GetMempoolResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::plugin_grpc::GetMempoolResponse, txs_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::plugin_grpc::MempoolTx, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::plugin_grpc::MempoolTx, tx_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::plugin_grpc::MessageSubscribeTo)},
  { 13, -1, sizeof(::plugin_grpc::Message)},
  { 27, -1, sizeof(::plugin_grpc::Block)},
  { 35, -1, sizeof(::plugin_grpc::Coin)},
  { 44, -1, sizeof(::plugin_grpc::BlockMetadata)},
  { 51, -1, sizeof(::plugin_grpc::BlockIdentifier)},
  { 59, -1, sizeof(::plugin_grpc::UpdatedBlockTip)},
  { 65, -1, sizeof(::plugin_grpc::TransactionAddedToMempool)},
  { 71, -1, sizeof(::plugin_grpc::TransactionRemovedFromMempool)},
  { 77, -1, sizeof(::plugin_grpc::BlockConnected)},
  { 85, -1, sizeof(::plugin_grpc::BlockDisconnected)},
  { 91, -1, sizeof(::plugin_grpc::ChainStateFlushed)},
  { 97, -1, sizeof(::plugin_grpc::BlockChecked)},
  { 104, -1, sizeof(::plugin_grpc::BlockValidationState)},
  { 111, -1, sizeof(::plugin_grpc::NewPoWValidBlock)},
  { 117, -1, sizeof(::plugin_grpc::GetBlockRequest)},
  { 123, -1, sizeof(::plugin_grpc::GetBlockResponse)},
  { 129, -1, sizeof(::plugin_grpc::GetBlockUndoDataRequest)},
  { 135, -1, sizeof(::plugin_grpc::GetBlockUndoDataResponse)},
  { 141, -1, sizeof(::plugin_grpc::GetMempoolRequest)},
  { 146, -1, sizeof(::plugin_grpc::GetMempoolResponse)},
  { 152, -1, sizeof(::plugin_grpc::MempoolTx)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::plugin_grpc::_MessageSubscribeTo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::plugin_grpc::_Message_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::plugin_grpc::_Block_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::plugin_grpc::_Coin_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::plugin_grpc::_BlockMetadata_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::plugin_grpc::_BlockIdentifier_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::plugin_grpc::_UpdatedBlockTip_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::plugin_grpc::_TransactionAddedToMempool_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::plugin_grpc::_TransactionRemovedFromMempool_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::plugin_grpc::_BlockConnected_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::plugin_grpc::_BlockDisconnected_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::plugin_grpc::_ChainStateFlushed_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::plugin_grpc::_BlockChecked_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::plugin_grpc::_BlockValidationState_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::plugin_grpc::_NewPoWValidBlock_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::plugin_grpc::_GetBlockRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::plugin_grpc::_GetBlockResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::plugin_grpc::_GetBlockUndoDataRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::plugin_grpc::_GetBlockUndoDataResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::plugin_grpc::_GetMempoolRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::plugin_grpc::_GetMempoolResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::plugin_grpc::_MempoolTx_default_instance_),
};

const char descriptor_table_protodef_plugin_5fgrpc_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\021plugin_grpc.proto\022\013plugin_grpc\"\205\002\n\022Mes"
  "sageSubscribeTo\022\031\n\021updated_block_tip\030\001 \001"
  "(\010\022$\n\034transaction_added_to_mempool\030\002 \001(\010"
  "\022(\n transaction_removed_from_mempool\030\003 \001"
  "(\010\022\027\n\017block_connected\030\004 \001(\010\022\032\n\022block_dis"
  "connected\030\005 \001(\010\022\033\n\023chain_state_flushed\030\006"
  " \001(\010\022\025\n\rblock_checked\030\007 \001(\010\022\033\n\023new_pow_v"
  "alid_block\030\010 \001(\010\"\236\004\n\007Message\0229\n\021updated_"
  "block_tip\030\001 \001(\0132\034.plugin_grpc.UpdatedBlo"
  "ckTipH\000\022N\n\034transaction_added_to_mempool\030"
  "\002 \001(\0132&.plugin_grpc.TransactionAddedToMe"
  "mpoolH\000\022V\n transaction_removed_from_memp"
  "ool\030\003 \001(\0132*.plugin_grpc.TransactionRemov"
  "edFromMempoolH\000\0226\n\017block_connected\030\004 \001(\013"
  "2\033.plugin_grpc.BlockConnectedH\000\022<\n\022block"
  "_disconnected\030\005 \001(\0132\036.plugin_grpc.BlockD"
  "isconnectedH\000\022=\n\023chain_state_flushed\030\006 \001"
  "(\0132\036.plugin_grpc.ChainStateFlushedH\000\0222\n\r"
  "block_checked\030\007 \001(\0132\031.plugin_grpc.BlockC"
  "heckedH\000\022<\n\023new_pow_valid_block\030\010 \001(\0132\035."
  "plugin_grpc.NewPoWValidBlockH\000B\t\n\007messag"
  "e\"R\n\005Block\022\016\n\006header\030\001 \001(\014\022,\n\010metadata\030\002"
  " \003(\0132\032.plugin_grpc.BlockMetadata\022\013\n\003txs\030"
  "\003 \003(\014\"K\n\004Coin\022\016\n\006amount\030\001 \001(\004\022\016\n\006script\030"
  "\002 \001(\014\022\016\n\006height\030\003 \001(\005\022\023\n\013is_coinbase\030\004 \001"
  "(\010\"6\n\rBlockMetadata\022\020\n\010field_id\030\001 \001(\r\022\023\n"
  "\013field_value\030\002 \001(\014\">\n\017BlockIdentifier\022\020\n"
  "\006height\030\001 \001(\005H\000\022\023\n\tblockhash\030\002 \001(\014H\000B\004\n\002"
  "id\"$\n\017UpdatedBlockTip\022\021\n\tblockhash\030\001 \001(\014"
  "\"\'\n\031TransactionAddedToMempool\022\n\n\002tx\030\001 \001("
  "\014\"-\n\035TransactionRemovedFromMempool\022\014\n\004tx"
  "id\030\001 \001(\014\"b\n\016BlockConnected\022\023\n\013blockheade"
  "r\030\001 \001(\014\022,\n\010metadata\030\002 \003(\0132\032.plugin_grpc."
  "BlockMetadata\022\r\n\005txids\030\003 \003(\014\"&\n\021BlockDis"
  "connected\022\021\n\tblockhash\030\001 \001(\014\"&\n\021ChainSta"
  "teFlushed\022\021\n\tblockhash\030\001 \001(\014\"^\n\014BlockChe"
  "cked\022\021\n\tblockhash\030\001 \001(\014\022;\n\020validation_st"
  "ate\030\002 \001(\0132!.plugin_grpc.BlockValidationS"
  "tate\"5\n\024BlockValidationState\022\r\n\005state\030\001 "
  "\001(\t\022\016\n\006reason\030\002 \001(\t\"\'\n\020NewPoWValidBlock\022"
  "\023\n\013blockheader\030\001 \001(\014\"A\n\017GetBlockRequest\022"
  ".\n\010block_id\030\001 \001(\0132\034.plugin_grpc.BlockIde"
  "ntifier\"5\n\020GetBlockResponse\022!\n\005block\030\001 \001"
  "(\0132\022.plugin_grpc.Block\"I\n\027GetBlockUndoDa"
  "taRequest\022.\n\010block_id\030\001 \001(\0132\034.plugin_grp"
  "c.BlockIdentifier\"<\n\030GetBlockUndoDataRes"
  "ponse\022 \n\005coins\030\001 \003(\0132\021.plugin_grpc.Coin\""
  "\023\n\021GetMempoolRequest\"9\n\022GetMempoolRespon"
  "se\022#\n\003txs\030\001 \003(\0132\026.plugin_grpc.MempoolTx\""
  "\027\n\tMempoolTx\022\n\n\002tx\030\001 \001(\0142\315\002\n\rNodeInterfa"
  "ce\022C\n\010Messages\022\037.plugin_grpc.MessageSubs"
  "cribeTo\032\024.plugin_grpc.Message0\001\022G\n\010GetBl"
  "ock\022\034.plugin_grpc.GetBlockRequest\032\035.plug"
  "in_grpc.GetBlockResponse\022_\n\020GetBlockUndo"
  "Data\022$.plugin_grpc.GetBlockUndoDataReque"
  "st\032%.plugin_grpc.GetBlockUndoDataRespons"
  "e\022M\n\nGetMempool\022\036.plugin_grpc.GetMempool"
  "Request\032\037.plugin_grpc.GetMempoolResponse"
  "b\006proto3"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_plugin_5fgrpc_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_plugin_5fgrpc_2eproto = {
  false, false, 2328, descriptor_table_protodef_plugin_5fgrpc_2eproto, "plugin_grpc.proto", 
  &descriptor_table_plugin_5fgrpc_2eproto_once, nullptr, 0, 22,
  schemas, file_default_instances, TableStruct_plugin_5fgrpc_2eproto::offsets,
  file_level_metadata_plugin_5fgrpc_2eproto, file_level_enum_descriptors_plugin_5fgrpc_2eproto, file_level_service_descriptors_plugin_5fgrpc_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK ::PROTOBUF_NAMESPACE_ID::Metadata
descriptor_table_plugin_5fgrpc_2eproto_metadata_getter(int index) {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_plugin_5fgrpc_2eproto);
  return descriptor_table_plugin_5fgrpc_2eproto.file_level_metadata[index];
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_plugin_5fgrpc_2eproto(&descriptor_table_plugin_5fgrpc_2eproto);
namespace plugin_grpc {

// ===================================================================

class MessageSubscribeTo::_Internal {
 public:
};

MessageSubscribeTo::MessageSubscribeTo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:plugin_grpc.MessageSubscribeTo)
}
MessageSubscribeTo::MessageSubscribeTo(const MessageSubscribeTo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&updated_block_tip_, &from.updated_block_tip_,
    static_cast<size_t>(reinterpret_cast<char*>(&new_pow_valid_block_) -
    reinterpret_cast<char*>(&updated_block_tip_)) + sizeof(new_pow_valid_block_));
  // @@protoc_insertion_point(copy_constructor:plugin_grpc.MessageSubscribeTo)
}

void MessageSubscribeTo::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&updated_block_tip_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&new_pow_valid_block_) -
    reinterpret_cast<char*>(&updated_block_tip_)) + sizeof(new_pow_valid_block_));
}

MessageSubscribeTo::~MessageSubscribeTo() {
  // @@protoc_insertion_point(destructor:plugin_grpc.MessageSubscribeTo)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MessageSubscribeTo::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void MessageSubscribeTo::ArenaDtor(void* object) {
  MessageSubscribeTo* _this = reinterpret_cast< MessageSubscribeTo* >(object);
  (void)_this;
}
void MessageSubscribeTo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MessageSubscribeTo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void MessageSubscribeTo::Clear() {
// @@protoc_insertion_point(message_clear_start:plugin_grpc.MessageSubscribeTo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&updated_block_tip_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&new_pow_valid_block_) -
      reinterpret_cast<char*>(&updated_block_tip_)) + sizeof(new_pow_valid_block_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MessageSubscribeTo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool updated_block_tip = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          updated_block_tip_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool transaction_added_to_mempool = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          transaction_added_to_mempool_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool transaction_removed_from_mempool = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          transaction_removed_from_mempool_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool block_connected = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          block_connected_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool block_disconnected = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          block_disconnected_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool chain_state_flushed = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          chain_state_flushed_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool block_checked = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          block_checked_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool new_pow_valid_block = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          new_pow_valid_block_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MessageSubscribeTo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:plugin_grpc.MessageSubscribeTo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool updated_block_tip = 1;
  if (this->updated_block_tip() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_updated_block_tip(), target);
  }

  // bool transaction_added_to_mempool = 2;
  if (this->transaction_added_to_mempool() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_transaction_added_to_mempool(), target);
  }

  // bool transaction_removed_from_mempool = 3;
  if (this->transaction_removed_from_mempool() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_transaction_removed_from_mempool(), target);
  }

  // bool block_connected = 4;
  if (this->block_connected() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_block_connected(), target);
  }

  // bool block_disconnected = 5;
  if (this->block_disconnected() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(5, this->_internal_block_disconnected(), target);
  }

  // bool chain_state_flushed = 6;
  if (this->chain_state_flushed() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(6, this->_internal_chain_state_flushed(), target);
  }

  // bool block_checked = 7;
  if (this->block_checked() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(7, this->_internal_block_checked(), target);
  }

  // bool new_pow_valid_block = 8;
  if (this->new_pow_valid_block() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(8, this->_internal_new_pow_valid_block(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plugin_grpc.MessageSubscribeTo)
  return target;
}

size_t MessageSubscribeTo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plugin_grpc.MessageSubscribeTo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool updated_block_tip = 1;
  if (this->updated_block_tip() != 0) {
    total_size += 1 + 1;
  }

  // bool transaction_added_to_mempool = 2;
  if (this->transaction_added_to_mempool() != 0) {
    total_size += 1 + 1;
  }

  // bool transaction_removed_from_mempool = 3;
  if (this->transaction_removed_from_mempool() != 0) {
    total_size += 1 + 1;
  }

  // bool block_connected = 4;
  if (this->block_connected() != 0) {
    total_size += 1 + 1;
  }

  // bool block_disconnected = 5;
  if (this->block_disconnected() != 0) {
    total_size += 1 + 1;
  }

  // bool chain_state_flushed = 6;
  if (this->chain_state_flushed() != 0) {
    total_size += 1 + 1;
  }

  // bool block_checked = 7;
  if (this->block_checked() != 0) {
    total_size += 1 + 1;
  }

  // bool new_pow_valid_block = 8;
  if (this->new_pow_valid_block() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MessageSubscribeTo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plugin_grpc.MessageSubscribeTo)
  GOOGLE_DCHECK_NE(&from, this);
  const MessageSubscribeTo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MessageSubscribeTo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plugin_grpc.MessageSubscribeTo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plugin_grpc.MessageSubscribeTo)
    MergeFrom(*source);
  }
}

void MessageSubscribeTo::MergeFrom(const MessageSubscribeTo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plugin_grpc.MessageSubscribeTo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.updated_block_tip() != 0) {
    _internal_set_updated_block_tip(from._internal_updated_block_tip());
  }
  if (from.transaction_added_to_mempool() != 0) {
    _internal_set_transaction_added_to_mempool(from._internal_transaction_added_to_mempool());
  }
  if (from.transaction_removed_from_mempool() != 0) {
    _internal_set_transaction_removed_from_mempool(from._internal_transaction_removed_from_mempool());
  }
  if (from.block_connected() != 0) {
    _internal_set_block_connected(from._internal_block_connected());
  }
  if (from.block_disconnected() != 0) {
    _internal_set_block_disconnected(from._internal_block_disconnected());
  }
  if (from.chain_state_flushed() != 0) {
    _internal_set_chain_state_flushed(from._internal_chain_state_flushed());
  }
  if (from.block_checked() != 0) {
    _internal_set_block_checked(from._internal_block_checked());
  }
  if (from.new_pow_valid_block() != 0) {
    _internal_set_new_pow_valid_block(from._internal_new_pow_valid_block());
  }
}

void MessageSubscribeTo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plugin_grpc.MessageSubscribeTo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageSubscribeTo::CopyFrom(const MessageSubscribeTo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plugin_grpc.MessageSubscribeTo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageSubscribeTo::IsInitialized() const {
  return true;
}

void MessageSubscribeTo::InternalSwap(MessageSubscribeTo* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MessageSubscribeTo, new_pow_valid_block_)
      + sizeof(MessageSubscribeTo::new_pow_valid_block_)
      - PROTOBUF_FIELD_OFFSET(MessageSubscribeTo, updated_block_tip_)>(
          reinterpret_cast<char*>(&updated_block_tip_),
          reinterpret_cast<char*>(&other->updated_block_tip_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MessageSubscribeTo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Message::_Internal {
 public:
  static const ::plugin_grpc::UpdatedBlockTip& updated_block_tip(const Message* msg);
  static const ::plugin_grpc::TransactionAddedToMempool& transaction_added_to_mempool(const Message* msg);
  static const ::plugin_grpc::TransactionRemovedFromMempool& transaction_removed_from_mempool(const Message* msg);
  static const ::plugin_grpc::BlockConnected& block_connected(const Message* msg);
  static const ::plugin_grpc::BlockDisconnected& block_disconnected(const Message* msg);
  static const ::plugin_grpc::ChainStateFlushed& chain_state_flushed(const Message* msg);
  static const ::plugin_grpc::BlockChecked& block_checked(const Message* msg);
  static const ::plugin_grpc::NewPoWValidBlock& new_pow_valid_block(const Message* msg);
};

const ::plugin_grpc::UpdatedBlockTip&
Message::_Internal::updated_block_tip(const Message* msg) {
  return *msg->message_.updated_block_tip_;
}
const ::plugin_grpc::TransactionAddedToMempool&
Message::_Internal::transaction_added_to_mempool(const Message* msg) {
  return *msg->message_.transaction_added_to_mempool_;
}
const ::plugin_grpc::TransactionRemovedFromMempool&
Message::_Internal::transaction_removed_from_mempool(const Message* msg) {
  return *msg->message_.transaction_removed_from_mempool_;
}
const ::plugin_grpc::BlockConnected&
Message::_Internal::block_connected(const Message* msg) {
  return *msg->message_.block_connected_;
}
const ::plugin_grpc::BlockDisconnected&
Message::_Internal::block_disconnected(const Message* msg) {
  return *msg->message_.block_disconnected_;
}
const ::plugin_grpc::ChainStateFlushed&
Message::_Internal::chain_state_flushed(const Message* msg) {
  return *msg->message_.chain_state_flushed_;
}
const ::plugin_grpc::BlockChecked&
Message::_Internal::block_checked(const Message* msg) {
  return *msg->message_.block_checked_;
}
const ::plugin_grpc::NewPoWValidBlock&
Message::_Internal::new_pow_valid_block(const Message* msg) {
  return *msg->message_.new_pow_valid_block_;
}
void Message::set_allocated_updated_block_tip(::plugin_grpc::UpdatedBlockTip* updated_block_tip) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_message();
  if (updated_block_tip) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(updated_block_tip);
    if (message_arena != submessage_arena) {
      updated_block_tip = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, updated_block_tip, submessage_arena);
    }
    set_has_updated_block_tip();
    message_.updated_block_tip_ = updated_block_tip;
  }
  // @@protoc_insertion_point(field_set_allocated:plugin_grpc.Message.updated_block_tip)
}
void Message::set_allocated_transaction_added_to_mempool(::plugin_grpc::TransactionAddedToMempool* transaction_added_to_mempool) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_message();
  if (transaction_added_to_mempool) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(transaction_added_to_mempool);
    if (message_arena != submessage_arena) {
      transaction_added_to_mempool = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, transaction_added_to_mempool, submessage_arena);
    }
    set_has_transaction_added_to_mempool();
    message_.transaction_added_to_mempool_ = transaction_added_to_mempool;
  }
  // @@protoc_insertion_point(field_set_allocated:plugin_grpc.Message.transaction_added_to_mempool)
}
void Message::set_allocated_transaction_removed_from_mempool(::plugin_grpc::TransactionRemovedFromMempool* transaction_removed_from_mempool) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_message();
  if (transaction_removed_from_mempool) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(transaction_removed_from_mempool);
    if (message_arena != submessage_arena) {
      transaction_removed_from_mempool = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, transaction_removed_from_mempool, submessage_arena);
    }
    set_has_transaction_removed_from_mempool();
    message_.transaction_removed_from_mempool_ = transaction_removed_from_mempool;
  }
  // @@protoc_insertion_point(field_set_allocated:plugin_grpc.Message.transaction_removed_from_mempool)
}
void Message::set_allocated_block_connected(::plugin_grpc::BlockConnected* block_connected) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_message();
  if (block_connected) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(block_connected);
    if (message_arena != submessage_arena) {
      block_connected = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, block_connected, submessage_arena);
    }
    set_has_block_connected();
    message_.block_connected_ = block_connected;
  }
  // @@protoc_insertion_point(field_set_allocated:plugin_grpc.Message.block_connected)
}
void Message::set_allocated_block_disconnected(::plugin_grpc::BlockDisconnected* block_disconnected) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_message();
  if (block_disconnected) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(block_disconnected);
    if (message_arena != submessage_arena) {
      block_disconnected = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, block_disconnected, submessage_arena);
    }
    set_has_block_disconnected();
    message_.block_disconnected_ = block_disconnected;
  }
  // @@protoc_insertion_point(field_set_allocated:plugin_grpc.Message.block_disconnected)
}
void Message::set_allocated_chain_state_flushed(::plugin_grpc::ChainStateFlushed* chain_state_flushed) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_message();
  if (chain_state_flushed) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(chain_state_flushed);
    if (message_arena != submessage_arena) {
      chain_state_flushed = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, chain_state_flushed, submessage_arena);
    }
    set_has_chain_state_flushed();
    message_.chain_state_flushed_ = chain_state_flushed;
  }
  // @@protoc_insertion_point(field_set_allocated:plugin_grpc.Message.chain_state_flushed)
}
void Message::set_allocated_block_checked(::plugin_grpc::BlockChecked* block_checked) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_message();
  if (block_checked) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(block_checked);
    if (message_arena != submessage_arena) {
      block_checked = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, block_checked, submessage_arena);
    }
    set_has_block_checked();
    message_.block_checked_ = block_checked;
  }
  // @@protoc_insertion_point(field_set_allocated:plugin_grpc.Message.block_checked)
}
void Message::set_allocated_new_pow_valid_block(::plugin_grpc::NewPoWValidBlock* new_pow_valid_block) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_message();
  if (new_pow_valid_block) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(new_pow_valid_block);
    if (message_arena != submessage_arena) {
      new_pow_valid_block = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, new_pow_valid_block, submessage_arena);
    }
    set_has_new_pow_valid_block();
    message_.new_pow_valid_block_ = new_pow_valid_block;
  }
  // @@protoc_insertion_point(field_set_allocated:plugin_grpc.Message.new_pow_valid_block)
}
Message::Message(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:plugin_grpc.Message)
}
Message::Message(const Message& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_message();
  switch (from.message_case()) {
    case kUpdatedBlockTip: {
      _internal_mutable_updated_block_tip()->::plugin_grpc::UpdatedBlockTip::MergeFrom(from._internal_updated_block_tip());
      break;
    }
    case kTransactionAddedToMempool: {
      _internal_mutable_transaction_added_to_mempool()->::plugin_grpc::TransactionAddedToMempool::MergeFrom(from._internal_transaction_added_to_mempool());
      break;
    }
    case kTransactionRemovedFromMempool: {
      _internal_mutable_transaction_removed_from_mempool()->::plugin_grpc::TransactionRemovedFromMempool::MergeFrom(from._internal_transaction_removed_from_mempool());
      break;
    }
    case kBlockConnected: {
      _internal_mutable_block_connected()->::plugin_grpc::BlockConnected::MergeFrom(from._internal_block_connected());
      break;
    }
    case kBlockDisconnected: {
      _internal_mutable_block_disconnected()->::plugin_grpc::BlockDisconnected::MergeFrom(from._internal_block_disconnected());
      break;
    }
    case kChainStateFlushed: {
      _internal_mutable_chain_state_flushed()->::plugin_grpc::ChainStateFlushed::MergeFrom(from._internal_chain_state_flushed());
      break;
    }
    case kBlockChecked: {
      _internal_mutable_block_checked()->::plugin_grpc::BlockChecked::MergeFrom(from._internal_block_checked());
      break;
    }
    case kNewPowValidBlock: {
      _internal_mutable_new_pow_valid_block()->::plugin_grpc::NewPoWValidBlock::MergeFrom(from._internal_new_pow_valid_block());
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:plugin_grpc.Message)
}

void Message::SharedCtor() {
clear_has_message();
}

Message::~Message() {
  // @@protoc_insertion_point(destructor:plugin_grpc.Message)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Message::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (has_message()) {
    clear_message();
  }
}

void Message::ArenaDtor(void* object) {
  Message* _this = reinterpret_cast< Message* >(object);
  (void)_this;
}
void Message::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Message::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Message::clear_message() {
// @@protoc_insertion_point(one_of_clear_start:plugin_grpc.Message)
  switch (message_case()) {
    case kUpdatedBlockTip: {
      if (GetArena() == nullptr) {
        delete message_.updated_block_tip_;
      }
      break;
    }
    case kTransactionAddedToMempool: {
      if (GetArena() == nullptr) {
        delete message_.transaction_added_to_mempool_;
      }
      break;
    }
    case kTransactionRemovedFromMempool: {
      if (GetArena() == nullptr) {
        delete message_.transaction_removed_from_mempool_;
      }
      break;
    }
    case kBlockConnected: {
      if (GetArena() == nullptr) {
        delete message_.block_connected_;
      }
      break;
    }
    case kBlockDisconnected: {
      if (GetArena() == nullptr) {
        delete message_.block_disconnected_;
      }
      break;
    }
    case kChainStateFlushed: {
      if (GetArena() == nullptr) {
        delete message_.chain_state_flushed_;
      }
      break;
    }
    case kBlockChecked: {
      if (GetArena() == nullptr) {
        delete message_.block_checked_;
      }
      break;
    }
    case kNewPowValidBlock: {
      if (GetArena() == nullptr) {
        delete message_.new_pow_valid_block_;
      }
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = MESSAGE_NOT_SET;
}


void Message::Clear() {
// @@protoc_insertion_point(message_clear_start:plugin_grpc.Message)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_message();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Message::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .plugin_grpc.UpdatedBlockTip updated_block_tip = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_updated_block_tip(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .plugin_grpc.TransactionAddedToMempool transaction_added_to_mempool = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_transaction_added_to_mempool(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .plugin_grpc.TransactionRemovedFromMempool transaction_removed_from_mempool = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_transaction_removed_from_mempool(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .plugin_grpc.BlockConnected block_connected = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_block_connected(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .plugin_grpc.BlockDisconnected block_disconnected = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_block_disconnected(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .plugin_grpc.ChainStateFlushed chain_state_flushed = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_chain_state_flushed(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .plugin_grpc.BlockChecked block_checked = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_block_checked(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .plugin_grpc.NewPoWValidBlock new_pow_valid_block = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_new_pow_valid_block(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Message::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:plugin_grpc.Message)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .plugin_grpc.UpdatedBlockTip updated_block_tip = 1;
  if (_internal_has_updated_block_tip()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::updated_block_tip(this), target, stream);
  }

  // .plugin_grpc.TransactionAddedToMempool transaction_added_to_mempool = 2;
  if (_internal_has_transaction_added_to_mempool()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::transaction_added_to_mempool(this), target, stream);
  }

  // .plugin_grpc.TransactionRemovedFromMempool transaction_removed_from_mempool = 3;
  if (_internal_has_transaction_removed_from_mempool()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::transaction_removed_from_mempool(this), target, stream);
  }

  // .plugin_grpc.BlockConnected block_connected = 4;
  if (_internal_has_block_connected()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::block_connected(this), target, stream);
  }

  // .plugin_grpc.BlockDisconnected block_disconnected = 5;
  if (_internal_has_block_disconnected()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::block_disconnected(this), target, stream);
  }

  // .plugin_grpc.ChainStateFlushed chain_state_flushed = 6;
  if (_internal_has_chain_state_flushed()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::chain_state_flushed(this), target, stream);
  }

  // .plugin_grpc.BlockChecked block_checked = 7;
  if (_internal_has_block_checked()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        7, _Internal::block_checked(this), target, stream);
  }

  // .plugin_grpc.NewPoWValidBlock new_pow_valid_block = 8;
  if (_internal_has_new_pow_valid_block()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        8, _Internal::new_pow_valid_block(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plugin_grpc.Message)
  return target;
}

size_t Message::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plugin_grpc.Message)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (message_case()) {
    // .plugin_grpc.UpdatedBlockTip updated_block_tip = 1;
    case kUpdatedBlockTip: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *message_.updated_block_tip_);
      break;
    }
    // .plugin_grpc.TransactionAddedToMempool transaction_added_to_mempool = 2;
    case kTransactionAddedToMempool: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *message_.transaction_added_to_mempool_);
      break;
    }
    // .plugin_grpc.TransactionRemovedFromMempool transaction_removed_from_mempool = 3;
    case kTransactionRemovedFromMempool: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *message_.transaction_removed_from_mempool_);
      break;
    }
    // .plugin_grpc.BlockConnected block_connected = 4;
    case kBlockConnected: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *message_.block_connected_);
      break;
    }
    // .plugin_grpc.BlockDisconnected block_disconnected = 5;
    case kBlockDisconnected: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *message_.block_disconnected_);
      break;
    }
    // .plugin_grpc.ChainStateFlushed chain_state_flushed = 6;
    case kChainStateFlushed: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *message_.chain_state_flushed_);
      break;
    }
    // .plugin_grpc.BlockChecked block_checked = 7;
    case kBlockChecked: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *message_.block_checked_);
      break;
    }
    // .plugin_grpc.NewPoWValidBlock new_pow_valid_block = 8;
    case kNewPowValidBlock: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *message_.new_pow_valid_block_);
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Message::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plugin_grpc.Message)
  GOOGLE_DCHECK_NE(&from, this);
  const Message* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Message>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plugin_grpc.Message)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plugin_grpc.Message)
    MergeFrom(*source);
  }
}

void Message::MergeFrom(const Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plugin_grpc.Message)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.message_case()) {
    case kUpdatedBlockTip: {
      _internal_mutable_updated_block_tip()->::plugin_grpc::UpdatedBlockTip::MergeFrom(from._internal_updated_block_tip());
      break;
    }
    case kTransactionAddedToMempool: {
      _internal_mutable_transaction_added_to_mempool()->::plugin_grpc::TransactionAddedToMempool::MergeFrom(from._internal_transaction_added_to_mempool());
      break;
    }
    case kTransactionRemovedFromMempool: {
      _internal_mutable_transaction_removed_from_mempool()->::plugin_grpc::TransactionRemovedFromMempool::MergeFrom(from._internal_transaction_removed_from_mempool());
      break;
    }
    case kBlockConnected: {
      _internal_mutable_block_connected()->::plugin_grpc::BlockConnected::MergeFrom(from._internal_block_connected());
      break;
    }
    case kBlockDisconnected: {
      _internal_mutable_block_disconnected()->::plugin_grpc::BlockDisconnected::MergeFrom(from._internal_block_disconnected());
      break;
    }
    case kChainStateFlushed: {
      _internal_mutable_chain_state_flushed()->::plugin_grpc::ChainStateFlushed::MergeFrom(from._internal_chain_state_flushed());
      break;
    }
    case kBlockChecked: {
      _internal_mutable_block_checked()->::plugin_grpc::BlockChecked::MergeFrom(from._internal_block_checked());
      break;
    }
    case kNewPowValidBlock: {
      _internal_mutable_new_pow_valid_block()->::plugin_grpc::NewPoWValidBlock::MergeFrom(from._internal_new_pow_valid_block());
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
}

void Message::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plugin_grpc.Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message::CopyFrom(const Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plugin_grpc.Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message::IsInitialized() const {
  return true;
}

void Message::InternalSwap(Message* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(message_, other->message_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata Message::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Block::_Internal {
 public:
};

Block::Block(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  metadata_(arena),
  txs_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:plugin_grpc.Block)
}
Block::Block(const Block& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      metadata_(from.metadata_),
      txs_(from.txs_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  header_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_header().empty()) {
    header_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_header(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:plugin_grpc.Block)
}

void Block::SharedCtor() {
header_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Block::~Block() {
  // @@protoc_insertion_point(destructor:plugin_grpc.Block)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Block::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  header_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Block::ArenaDtor(void* object) {
  Block* _this = reinterpret_cast< Block* >(object);
  (void)_this;
}
void Block::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Block::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Block::Clear() {
// @@protoc_insertion_point(message_clear_start:plugin_grpc.Block)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metadata_.Clear();
  txs_.Clear();
  header_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Block::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes header = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_header();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .plugin_grpc.BlockMetadata metadata = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_metadata(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated bytes txs = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_txs();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Block::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:plugin_grpc.Block)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes header = 1;
  if (this->header().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_header(), target);
  }

  // repeated .plugin_grpc.BlockMetadata metadata = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_metadata_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_metadata(i), target, stream);
  }

  // repeated bytes txs = 3;
  for (int i = 0, n = this->_internal_txs_size(); i < n; i++) {
    const auto& s = this->_internal_txs(i);
    target = stream->WriteBytes(3, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plugin_grpc.Block)
  return target;
}

size_t Block::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plugin_grpc.Block)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .plugin_grpc.BlockMetadata metadata = 2;
  total_size += 1UL * this->_internal_metadata_size();
  for (const auto& msg : this->metadata_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated bytes txs = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(txs_.size());
  for (int i = 0, n = txs_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
      txs_.Get(i));
  }

  // bytes header = 1;
  if (this->header().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_header());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Block::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plugin_grpc.Block)
  GOOGLE_DCHECK_NE(&from, this);
  const Block* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Block>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plugin_grpc.Block)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plugin_grpc.Block)
    MergeFrom(*source);
  }
}

void Block::MergeFrom(const Block& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plugin_grpc.Block)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  metadata_.MergeFrom(from.metadata_);
  txs_.MergeFrom(from.txs_);
  if (from.header().size() > 0) {
    _internal_set_header(from._internal_header());
  }
}

void Block::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plugin_grpc.Block)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Block::CopyFrom(const Block& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plugin_grpc.Block)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Block::IsInitialized() const {
  return true;
}

void Block::InternalSwap(Block* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  metadata_.InternalSwap(&other->metadata_);
  txs_.InternalSwap(&other->txs_);
  header_.Swap(&other->header_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Block::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Coin::_Internal {
 public:
};

Coin::Coin(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:plugin_grpc.Coin)
}
Coin::Coin(const Coin& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  script_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_script().empty()) {
    script_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_script(), 
      GetArena());
  }
  ::memcpy(&amount_, &from.amount_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_coinbase_) -
    reinterpret_cast<char*>(&amount_)) + sizeof(is_coinbase_));
  // @@protoc_insertion_point(copy_constructor:plugin_grpc.Coin)
}

void Coin::SharedCtor() {
script_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&amount_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&is_coinbase_) -
    reinterpret_cast<char*>(&amount_)) + sizeof(is_coinbase_));
}

Coin::~Coin() {
  // @@protoc_insertion_point(destructor:plugin_grpc.Coin)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Coin::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  script_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Coin::ArenaDtor(void* object) {
  Coin* _this = reinterpret_cast< Coin* >(object);
  (void)_this;
}
void Coin::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Coin::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Coin::Clear() {
// @@protoc_insertion_point(message_clear_start:plugin_grpc.Coin)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  script_.ClearToEmpty();
  ::memset(&amount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_coinbase_) -
      reinterpret_cast<char*>(&amount_)) + sizeof(is_coinbase_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Coin::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 amount = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          amount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes script = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_script();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 height = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool is_coinbase = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          is_coinbase_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Coin::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:plugin_grpc.Coin)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 amount = 1;
  if (this->amount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_amount(), target);
  }

  // bytes script = 2;
  if (this->script().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_script(), target);
  }

  // int32 height = 3;
  if (this->height() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_height(), target);
  }

  // bool is_coinbase = 4;
  if (this->is_coinbase() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_is_coinbase(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plugin_grpc.Coin)
  return target;
}

size_t Coin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plugin_grpc.Coin)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes script = 2;
  if (this->script().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_script());
  }

  // uint64 amount = 1;
  if (this->amount() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_amount());
  }

  // int32 height = 3;
  if (this->height() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_height());
  }

  // bool is_coinbase = 4;
  if (this->is_coinbase() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Coin::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plugin_grpc.Coin)
  GOOGLE_DCHECK_NE(&from, this);
  const Coin* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Coin>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plugin_grpc.Coin)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plugin_grpc.Coin)
    MergeFrom(*source);
  }
}

void Coin::MergeFrom(const Coin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plugin_grpc.Coin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.script().size() > 0) {
    _internal_set_script(from._internal_script());
  }
  if (from.amount() != 0) {
    _internal_set_amount(from._internal_amount());
  }
  if (from.height() != 0) {
    _internal_set_height(from._internal_height());
  }
  if (from.is_coinbase() != 0) {
    _internal_set_is_coinbase(from._internal_is_coinbase());
  }
}

void Coin::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plugin_grpc.Coin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Coin::CopyFrom(const Coin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plugin_grpc.Coin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Coin::IsInitialized() const {
  return true;
}

void Coin::InternalSwap(Coin* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  script_.Swap(&other->script_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Coin, is_coinbase_)
      + sizeof(Coin::is_coinbase_)
      - PROTOBUF_FIELD_OFFSET(Coin, amount_)>(
          reinterpret_cast<char*>(&amount_),
          reinterpret_cast<char*>(&other->amount_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Coin::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class BlockMetadata::_Internal {
 public:
};

BlockMetadata::BlockMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:plugin_grpc.BlockMetadata)
}
BlockMetadata::BlockMetadata(const BlockMetadata& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  field_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_field_value().empty()) {
    field_value_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_field_value(), 
      GetArena());
  }
  field_id_ = from.field_id_;
  // @@protoc_insertion_point(copy_constructor:plugin_grpc.BlockMetadata)
}

void BlockMetadata::SharedCtor() {
field_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
field_id_ = 0u;
}

BlockMetadata::~BlockMetadata() {
  // @@protoc_insertion_point(destructor:plugin_grpc.BlockMetadata)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BlockMetadata::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  field_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void BlockMetadata::ArenaDtor(void* object) {
  BlockMetadata* _this = reinterpret_cast< BlockMetadata* >(object);
  (void)_this;
}
void BlockMetadata::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BlockMetadata::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BlockMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:plugin_grpc.BlockMetadata)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  field_value_.ClearToEmpty();
  field_id_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BlockMetadata::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 field_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          field_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes field_value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_field_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BlockMetadata::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:plugin_grpc.BlockMetadata)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 field_id = 1;
  if (this->field_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_field_id(), target);
  }

  // bytes field_value = 2;
  if (this->field_value().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_field_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plugin_grpc.BlockMetadata)
  return target;
}

size_t BlockMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plugin_grpc.BlockMetadata)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes field_value = 2;
  if (this->field_value().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_field_value());
  }

  // uint32 field_id = 1;
  if (this->field_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_field_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BlockMetadata::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plugin_grpc.BlockMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  const BlockMetadata* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BlockMetadata>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plugin_grpc.BlockMetadata)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plugin_grpc.BlockMetadata)
    MergeFrom(*source);
  }
}

void BlockMetadata::MergeFrom(const BlockMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plugin_grpc.BlockMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.field_value().size() > 0) {
    _internal_set_field_value(from._internal_field_value());
  }
  if (from.field_id() != 0) {
    _internal_set_field_id(from._internal_field_id());
  }
}

void BlockMetadata::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plugin_grpc.BlockMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BlockMetadata::CopyFrom(const BlockMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plugin_grpc.BlockMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BlockMetadata::IsInitialized() const {
  return true;
}

void BlockMetadata::InternalSwap(BlockMetadata* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  field_value_.Swap(&other->field_value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(field_id_, other->field_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BlockMetadata::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class BlockIdentifier::_Internal {
 public:
};

BlockIdentifier::BlockIdentifier(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:plugin_grpc.BlockIdentifier)
}
BlockIdentifier::BlockIdentifier(const BlockIdentifier& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_id();
  switch (from.id_case()) {
    case kHeight: {
      _internal_set_height(from._internal_height());
      break;
    }
    case kBlockhash: {
      _internal_set_blockhash(from._internal_blockhash());
      break;
    }
    case ID_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:plugin_grpc.BlockIdentifier)
}

void BlockIdentifier::SharedCtor() {
clear_has_id();
}

BlockIdentifier::~BlockIdentifier() {
  // @@protoc_insertion_point(destructor:plugin_grpc.BlockIdentifier)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BlockIdentifier::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (has_id()) {
    clear_id();
  }
}

void BlockIdentifier::ArenaDtor(void* object) {
  BlockIdentifier* _this = reinterpret_cast< BlockIdentifier* >(object);
  (void)_this;
}
void BlockIdentifier::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BlockIdentifier::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BlockIdentifier::clear_id() {
// @@protoc_insertion_point(one_of_clear_start:plugin_grpc.BlockIdentifier)
  switch (id_case()) {
    case kHeight: {
      // No need to clear
      break;
    }
    case kBlockhash: {
      id_.blockhash_.Destroy(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
      break;
    }
    case ID_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = ID_NOT_SET;
}


void BlockIdentifier::Clear() {
// @@protoc_insertion_point(message_clear_start:plugin_grpc.BlockIdentifier)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_id();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BlockIdentifier::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 height = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _internal_set_height(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes blockhash = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_blockhash();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BlockIdentifier::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:plugin_grpc.BlockIdentifier)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 height = 1;
  if (_internal_has_height()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_height(), target);
  }

  // bytes blockhash = 2;
  if (_internal_has_blockhash()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_blockhash(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plugin_grpc.BlockIdentifier)
  return target;
}

size_t BlockIdentifier::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plugin_grpc.BlockIdentifier)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (id_case()) {
    // int32 height = 1;
    case kHeight: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_height());
      break;
    }
    // bytes blockhash = 2;
    case kBlockhash: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_blockhash());
      break;
    }
    case ID_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BlockIdentifier::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plugin_grpc.BlockIdentifier)
  GOOGLE_DCHECK_NE(&from, this);
  const BlockIdentifier* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BlockIdentifier>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plugin_grpc.BlockIdentifier)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plugin_grpc.BlockIdentifier)
    MergeFrom(*source);
  }
}

void BlockIdentifier::MergeFrom(const BlockIdentifier& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plugin_grpc.BlockIdentifier)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.id_case()) {
    case kHeight: {
      _internal_set_height(from._internal_height());
      break;
    }
    case kBlockhash: {
      _internal_set_blockhash(from._internal_blockhash());
      break;
    }
    case ID_NOT_SET: {
      break;
    }
  }
}

void BlockIdentifier::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plugin_grpc.BlockIdentifier)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BlockIdentifier::CopyFrom(const BlockIdentifier& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plugin_grpc.BlockIdentifier)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BlockIdentifier::IsInitialized() const {
  return true;
}

void BlockIdentifier::InternalSwap(BlockIdentifier* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(id_, other->id_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata BlockIdentifier::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class UpdatedBlockTip::_Internal {
 public:
};

UpdatedBlockTip::UpdatedBlockTip(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:plugin_grpc.UpdatedBlockTip)
}
UpdatedBlockTip::UpdatedBlockTip(const UpdatedBlockTip& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  blockhash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_blockhash().empty()) {
    blockhash_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_blockhash(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:plugin_grpc.UpdatedBlockTip)
}

void UpdatedBlockTip::SharedCtor() {
blockhash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

UpdatedBlockTip::~UpdatedBlockTip() {
  // @@protoc_insertion_point(destructor:plugin_grpc.UpdatedBlockTip)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpdatedBlockTip::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  blockhash_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UpdatedBlockTip::ArenaDtor(void* object) {
  UpdatedBlockTip* _this = reinterpret_cast< UpdatedBlockTip* >(object);
  (void)_this;
}
void UpdatedBlockTip::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdatedBlockTip::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdatedBlockTip::Clear() {
// @@protoc_insertion_point(message_clear_start:plugin_grpc.UpdatedBlockTip)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  blockhash_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdatedBlockTip::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes blockhash = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_blockhash();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdatedBlockTip::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:plugin_grpc.UpdatedBlockTip)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes blockhash = 1;
  if (this->blockhash().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_blockhash(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plugin_grpc.UpdatedBlockTip)
  return target;
}

size_t UpdatedBlockTip::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plugin_grpc.UpdatedBlockTip)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes blockhash = 1;
  if (this->blockhash().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_blockhash());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdatedBlockTip::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plugin_grpc.UpdatedBlockTip)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdatedBlockTip* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdatedBlockTip>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plugin_grpc.UpdatedBlockTip)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plugin_grpc.UpdatedBlockTip)
    MergeFrom(*source);
  }
}

void UpdatedBlockTip::MergeFrom(const UpdatedBlockTip& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plugin_grpc.UpdatedBlockTip)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.blockhash().size() > 0) {
    _internal_set_blockhash(from._internal_blockhash());
  }
}

void UpdatedBlockTip::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plugin_grpc.UpdatedBlockTip)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdatedBlockTip::CopyFrom(const UpdatedBlockTip& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plugin_grpc.UpdatedBlockTip)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdatedBlockTip::IsInitialized() const {
  return true;
}

void UpdatedBlockTip::InternalSwap(UpdatedBlockTip* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  blockhash_.Swap(&other->blockhash_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdatedBlockTip::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class TransactionAddedToMempool::_Internal {
 public:
};

TransactionAddedToMempool::TransactionAddedToMempool(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:plugin_grpc.TransactionAddedToMempool)
}
TransactionAddedToMempool::TransactionAddedToMempool(const TransactionAddedToMempool& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  tx_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_tx().empty()) {
    tx_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_tx(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:plugin_grpc.TransactionAddedToMempool)
}

void TransactionAddedToMempool::SharedCtor() {
tx_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

TransactionAddedToMempool::~TransactionAddedToMempool() {
  // @@protoc_insertion_point(destructor:plugin_grpc.TransactionAddedToMempool)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TransactionAddedToMempool::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  tx_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void TransactionAddedToMempool::ArenaDtor(void* object) {
  TransactionAddedToMempool* _this = reinterpret_cast< TransactionAddedToMempool* >(object);
  (void)_this;
}
void TransactionAddedToMempool::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TransactionAddedToMempool::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void TransactionAddedToMempool::Clear() {
// @@protoc_insertion_point(message_clear_start:plugin_grpc.TransactionAddedToMempool)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tx_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TransactionAddedToMempool::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes tx = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_tx();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TransactionAddedToMempool::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:plugin_grpc.TransactionAddedToMempool)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes tx = 1;
  if (this->tx().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_tx(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plugin_grpc.TransactionAddedToMempool)
  return target;
}

size_t TransactionAddedToMempool::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plugin_grpc.TransactionAddedToMempool)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes tx = 1;
  if (this->tx().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_tx());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TransactionAddedToMempool::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plugin_grpc.TransactionAddedToMempool)
  GOOGLE_DCHECK_NE(&from, this);
  const TransactionAddedToMempool* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TransactionAddedToMempool>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plugin_grpc.TransactionAddedToMempool)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plugin_grpc.TransactionAddedToMempool)
    MergeFrom(*source);
  }
}

void TransactionAddedToMempool::MergeFrom(const TransactionAddedToMempool& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plugin_grpc.TransactionAddedToMempool)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.tx().size() > 0) {
    _internal_set_tx(from._internal_tx());
  }
}

void TransactionAddedToMempool::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plugin_grpc.TransactionAddedToMempool)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransactionAddedToMempool::CopyFrom(const TransactionAddedToMempool& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plugin_grpc.TransactionAddedToMempool)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransactionAddedToMempool::IsInitialized() const {
  return true;
}

void TransactionAddedToMempool::InternalSwap(TransactionAddedToMempool* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  tx_.Swap(&other->tx_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata TransactionAddedToMempool::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class TransactionRemovedFromMempool::_Internal {
 public:
};

TransactionRemovedFromMempool::TransactionRemovedFromMempool(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:plugin_grpc.TransactionRemovedFromMempool)
}
TransactionRemovedFromMempool::TransactionRemovedFromMempool(const TransactionRemovedFromMempool& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  txid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_txid().empty()) {
    txid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_txid(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:plugin_grpc.TransactionRemovedFromMempool)
}

void TransactionRemovedFromMempool::SharedCtor() {
txid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

TransactionRemovedFromMempool::~TransactionRemovedFromMempool() {
  // @@protoc_insertion_point(destructor:plugin_grpc.TransactionRemovedFromMempool)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TransactionRemovedFromMempool::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  txid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void TransactionRemovedFromMempool::ArenaDtor(void* object) {
  TransactionRemovedFromMempool* _this = reinterpret_cast< TransactionRemovedFromMempool* >(object);
  (void)_this;
}
void TransactionRemovedFromMempool::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TransactionRemovedFromMempool::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void TransactionRemovedFromMempool::Clear() {
// @@protoc_insertion_point(message_clear_start:plugin_grpc.TransactionRemovedFromMempool)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  txid_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TransactionRemovedFromMempool::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes txid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_txid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TransactionRemovedFromMempool::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:plugin_grpc.TransactionRemovedFromMempool)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes txid = 1;
  if (this->txid().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_txid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plugin_grpc.TransactionRemovedFromMempool)
  return target;
}

size_t TransactionRemovedFromMempool::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plugin_grpc.TransactionRemovedFromMempool)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes txid = 1;
  if (this->txid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_txid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TransactionRemovedFromMempool::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plugin_grpc.TransactionRemovedFromMempool)
  GOOGLE_DCHECK_NE(&from, this);
  const TransactionRemovedFromMempool* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TransactionRemovedFromMempool>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plugin_grpc.TransactionRemovedFromMempool)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plugin_grpc.TransactionRemovedFromMempool)
    MergeFrom(*source);
  }
}

void TransactionRemovedFromMempool::MergeFrom(const TransactionRemovedFromMempool& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plugin_grpc.TransactionRemovedFromMempool)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.txid().size() > 0) {
    _internal_set_txid(from._internal_txid());
  }
}

void TransactionRemovedFromMempool::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plugin_grpc.TransactionRemovedFromMempool)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransactionRemovedFromMempool::CopyFrom(const TransactionRemovedFromMempool& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plugin_grpc.TransactionRemovedFromMempool)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransactionRemovedFromMempool::IsInitialized() const {
  return true;
}

void TransactionRemovedFromMempool::InternalSwap(TransactionRemovedFromMempool* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  txid_.Swap(&other->txid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata TransactionRemovedFromMempool::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class BlockConnected::_Internal {
 public:
};

BlockConnected::BlockConnected(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  metadata_(arena),
  txids_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:plugin_grpc.BlockConnected)
}
BlockConnected::BlockConnected(const BlockConnected& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      metadata_(from.metadata_),
      txids_(from.txids_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  blockheader_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_blockheader().empty()) {
    blockheader_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_blockheader(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:plugin_grpc.BlockConnected)
}

void BlockConnected::SharedCtor() {
blockheader_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

BlockConnected::~BlockConnected() {
  // @@protoc_insertion_point(destructor:plugin_grpc.BlockConnected)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BlockConnected::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  blockheader_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void BlockConnected::ArenaDtor(void* object) {
  BlockConnected* _this = reinterpret_cast< BlockConnected* >(object);
  (void)_this;
}
void BlockConnected::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BlockConnected::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BlockConnected::Clear() {
// @@protoc_insertion_point(message_clear_start:plugin_grpc.BlockConnected)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metadata_.Clear();
  txids_.Clear();
  blockheader_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BlockConnected::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes blockheader = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_blockheader();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .plugin_grpc.BlockMetadata metadata = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_metadata(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated bytes txids = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_txids();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BlockConnected::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:plugin_grpc.BlockConnected)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes blockheader = 1;
  if (this->blockheader().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_blockheader(), target);
  }

  // repeated .plugin_grpc.BlockMetadata metadata = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_metadata_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_metadata(i), target, stream);
  }

  // repeated bytes txids = 3;
  for (int i = 0, n = this->_internal_txids_size(); i < n; i++) {
    const auto& s = this->_internal_txids(i);
    target = stream->WriteBytes(3, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plugin_grpc.BlockConnected)
  return target;
}

size_t BlockConnected::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plugin_grpc.BlockConnected)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .plugin_grpc.BlockMetadata metadata = 2;
  total_size += 1UL * this->_internal_metadata_size();
  for (const auto& msg : this->metadata_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated bytes txids = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(txids_.size());
  for (int i = 0, n = txids_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
      txids_.Get(i));
  }

  // bytes blockheader = 1;
  if (this->blockheader().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_blockheader());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BlockConnected::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plugin_grpc.BlockConnected)
  GOOGLE_DCHECK_NE(&from, this);
  const BlockConnected* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BlockConnected>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plugin_grpc.BlockConnected)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plugin_grpc.BlockConnected)
    MergeFrom(*source);
  }
}

void BlockConnected::MergeFrom(const BlockConnected& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plugin_grpc.BlockConnected)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  metadata_.MergeFrom(from.metadata_);
  txids_.MergeFrom(from.txids_);
  if (from.blockheader().size() > 0) {
    _internal_set_blockheader(from._internal_blockheader());
  }
}

void BlockConnected::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plugin_grpc.BlockConnected)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BlockConnected::CopyFrom(const BlockConnected& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plugin_grpc.BlockConnected)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BlockConnected::IsInitialized() const {
  return true;
}

void BlockConnected::InternalSwap(BlockConnected* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  metadata_.InternalSwap(&other->metadata_);
  txids_.InternalSwap(&other->txids_);
  blockheader_.Swap(&other->blockheader_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata BlockConnected::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class BlockDisconnected::_Internal {
 public:
};

BlockDisconnected::BlockDisconnected(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:plugin_grpc.BlockDisconnected)
}
BlockDisconnected::BlockDisconnected(const BlockDisconnected& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  blockhash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_blockhash().empty()) {
    blockhash_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_blockhash(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:plugin_grpc.BlockDisconnected)
}

void BlockDisconnected::SharedCtor() {
blockhash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

BlockDisconnected::~BlockDisconnected() {
  // @@protoc_insertion_point(destructor:plugin_grpc.BlockDisconnected)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BlockDisconnected::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  blockhash_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void BlockDisconnected::ArenaDtor(void* object) {
  BlockDisconnected* _this = reinterpret_cast< BlockDisconnected* >(object);
  (void)_this;
}
void BlockDisconnected::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BlockDisconnected::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BlockDisconnected::Clear() {
// @@protoc_insertion_point(message_clear_start:plugin_grpc.BlockDisconnected)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  blockhash_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BlockDisconnected::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes blockhash = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_blockhash();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BlockDisconnected::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:plugin_grpc.BlockDisconnected)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes blockhash = 1;
  if (this->blockhash().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_blockhash(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plugin_grpc.BlockDisconnected)
  return target;
}

size_t BlockDisconnected::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plugin_grpc.BlockDisconnected)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes blockhash = 1;
  if (this->blockhash().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_blockhash());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BlockDisconnected::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plugin_grpc.BlockDisconnected)
  GOOGLE_DCHECK_NE(&from, this);
  const BlockDisconnected* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BlockDisconnected>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plugin_grpc.BlockDisconnected)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plugin_grpc.BlockDisconnected)
    MergeFrom(*source);
  }
}

void BlockDisconnected::MergeFrom(const BlockDisconnected& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plugin_grpc.BlockDisconnected)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.blockhash().size() > 0) {
    _internal_set_blockhash(from._internal_blockhash());
  }
}

void BlockDisconnected::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plugin_grpc.BlockDisconnected)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BlockDisconnected::CopyFrom(const BlockDisconnected& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plugin_grpc.BlockDisconnected)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BlockDisconnected::IsInitialized() const {
  return true;
}

void BlockDisconnected::InternalSwap(BlockDisconnected* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  blockhash_.Swap(&other->blockhash_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata BlockDisconnected::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ChainStateFlushed::_Internal {
 public:
};

ChainStateFlushed::ChainStateFlushed(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:plugin_grpc.ChainStateFlushed)
}
ChainStateFlushed::ChainStateFlushed(const ChainStateFlushed& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  blockhash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_blockhash().empty()) {
    blockhash_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_blockhash(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:plugin_grpc.ChainStateFlushed)
}

void ChainStateFlushed::SharedCtor() {
blockhash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ChainStateFlushed::~ChainStateFlushed() {
  // @@protoc_insertion_point(destructor:plugin_grpc.ChainStateFlushed)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ChainStateFlushed::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  blockhash_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ChainStateFlushed::ArenaDtor(void* object) {
  ChainStateFlushed* _this = reinterpret_cast< ChainStateFlushed* >(object);
  (void)_this;
}
void ChainStateFlushed::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ChainStateFlushed::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ChainStateFlushed::Clear() {
// @@protoc_insertion_point(message_clear_start:plugin_grpc.ChainStateFlushed)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  blockhash_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ChainStateFlushed::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes blockhash = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_blockhash();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ChainStateFlushed::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:plugin_grpc.ChainStateFlushed)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes blockhash = 1;
  if (this->blockhash().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_blockhash(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plugin_grpc.ChainStateFlushed)
  return target;
}

size_t ChainStateFlushed::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plugin_grpc.ChainStateFlushed)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes blockhash = 1;
  if (this->blockhash().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_blockhash());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ChainStateFlushed::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plugin_grpc.ChainStateFlushed)
  GOOGLE_DCHECK_NE(&from, this);
  const ChainStateFlushed* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ChainStateFlushed>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plugin_grpc.ChainStateFlushed)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plugin_grpc.ChainStateFlushed)
    MergeFrom(*source);
  }
}

void ChainStateFlushed::MergeFrom(const ChainStateFlushed& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plugin_grpc.ChainStateFlushed)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.blockhash().size() > 0) {
    _internal_set_blockhash(from._internal_blockhash());
  }
}

void ChainStateFlushed::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plugin_grpc.ChainStateFlushed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChainStateFlushed::CopyFrom(const ChainStateFlushed& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plugin_grpc.ChainStateFlushed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChainStateFlushed::IsInitialized() const {
  return true;
}

void ChainStateFlushed::InternalSwap(ChainStateFlushed* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  blockhash_.Swap(&other->blockhash_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ChainStateFlushed::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class BlockChecked::_Internal {
 public:
  static const ::plugin_grpc::BlockValidationState& validation_state(const BlockChecked* msg);
};

const ::plugin_grpc::BlockValidationState&
BlockChecked::_Internal::validation_state(const BlockChecked* msg) {
  return *msg->validation_state_;
}
BlockChecked::BlockChecked(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:plugin_grpc.BlockChecked)
}
BlockChecked::BlockChecked(const BlockChecked& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  blockhash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_blockhash().empty()) {
    blockhash_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_blockhash(), 
      GetArena());
  }
  if (from._internal_has_validation_state()) {
    validation_state_ = new ::plugin_grpc::BlockValidationState(*from.validation_state_);
  } else {
    validation_state_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:plugin_grpc.BlockChecked)
}

void BlockChecked::SharedCtor() {
blockhash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
validation_state_ = nullptr;
}

BlockChecked::~BlockChecked() {
  // @@protoc_insertion_point(destructor:plugin_grpc.BlockChecked)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BlockChecked::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  blockhash_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete validation_state_;
}

void BlockChecked::ArenaDtor(void* object) {
  BlockChecked* _this = reinterpret_cast< BlockChecked* >(object);
  (void)_this;
}
void BlockChecked::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BlockChecked::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BlockChecked::Clear() {
// @@protoc_insertion_point(message_clear_start:plugin_grpc.BlockChecked)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  blockhash_.ClearToEmpty();
  if (GetArena() == nullptr && validation_state_ != nullptr) {
    delete validation_state_;
  }
  validation_state_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BlockChecked::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes blockhash = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_blockhash();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .plugin_grpc.BlockValidationState validation_state = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_validation_state(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BlockChecked::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:plugin_grpc.BlockChecked)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes blockhash = 1;
  if (this->blockhash().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_blockhash(), target);
  }

  // .plugin_grpc.BlockValidationState validation_state = 2;
  if (this->has_validation_state()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::validation_state(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plugin_grpc.BlockChecked)
  return target;
}

size_t BlockChecked::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plugin_grpc.BlockChecked)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes blockhash = 1;
  if (this->blockhash().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_blockhash());
  }

  // .plugin_grpc.BlockValidationState validation_state = 2;
  if (this->has_validation_state()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *validation_state_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BlockChecked::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plugin_grpc.BlockChecked)
  GOOGLE_DCHECK_NE(&from, this);
  const BlockChecked* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BlockChecked>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plugin_grpc.BlockChecked)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plugin_grpc.BlockChecked)
    MergeFrom(*source);
  }
}

void BlockChecked::MergeFrom(const BlockChecked& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plugin_grpc.BlockChecked)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.blockhash().size() > 0) {
    _internal_set_blockhash(from._internal_blockhash());
  }
  if (from.has_validation_state()) {
    _internal_mutable_validation_state()->::plugin_grpc::BlockValidationState::MergeFrom(from._internal_validation_state());
  }
}

void BlockChecked::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plugin_grpc.BlockChecked)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BlockChecked::CopyFrom(const BlockChecked& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plugin_grpc.BlockChecked)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BlockChecked::IsInitialized() const {
  return true;
}

void BlockChecked::InternalSwap(BlockChecked* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  blockhash_.Swap(&other->blockhash_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(validation_state_, other->validation_state_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BlockChecked::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class BlockValidationState::_Internal {
 public:
};

BlockValidationState::BlockValidationState(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:plugin_grpc.BlockValidationState)
}
BlockValidationState::BlockValidationState(const BlockValidationState& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  state_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_state().empty()) {
    state_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_state(), 
      GetArena());
  }
  reason_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_reason().empty()) {
    reason_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_reason(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:plugin_grpc.BlockValidationState)
}

void BlockValidationState::SharedCtor() {
state_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
reason_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

BlockValidationState::~BlockValidationState() {
  // @@protoc_insertion_point(destructor:plugin_grpc.BlockValidationState)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BlockValidationState::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  state_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  reason_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void BlockValidationState::ArenaDtor(void* object) {
  BlockValidationState* _this = reinterpret_cast< BlockValidationState* >(object);
  (void)_this;
}
void BlockValidationState::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BlockValidationState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BlockValidationState::Clear() {
// @@protoc_insertion_point(message_clear_start:plugin_grpc.BlockValidationState)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  state_.ClearToEmpty();
  reason_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BlockValidationState::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string state = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_state();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "plugin_grpc.BlockValidationState.state"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string reason = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_reason();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "plugin_grpc.BlockValidationState.reason"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BlockValidationState::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:plugin_grpc.BlockValidationState)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string state = 1;
  if (this->state().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_state().data(), static_cast<int>(this->_internal_state().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "plugin_grpc.BlockValidationState.state");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_state(), target);
  }

  // string reason = 2;
  if (this->reason().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_reason().data(), static_cast<int>(this->_internal_reason().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "plugin_grpc.BlockValidationState.reason");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_reason(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plugin_grpc.BlockValidationState)
  return target;
}

size_t BlockValidationState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plugin_grpc.BlockValidationState)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string state = 1;
  if (this->state().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_state());
  }

  // string reason = 2;
  if (this->reason().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_reason());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BlockValidationState::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plugin_grpc.BlockValidationState)
  GOOGLE_DCHECK_NE(&from, this);
  const BlockValidationState* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BlockValidationState>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plugin_grpc.BlockValidationState)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plugin_grpc.BlockValidationState)
    MergeFrom(*source);
  }
}

void BlockValidationState::MergeFrom(const BlockValidationState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plugin_grpc.BlockValidationState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.state().size() > 0) {
    _internal_set_state(from._internal_state());
  }
  if (from.reason().size() > 0) {
    _internal_set_reason(from._internal_reason());
  }
}

void BlockValidationState::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plugin_grpc.BlockValidationState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BlockValidationState::CopyFrom(const BlockValidationState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plugin_grpc.BlockValidationState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BlockValidationState::IsInitialized() const {
  return true;
}

void BlockValidationState::InternalSwap(BlockValidationState* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  state_.Swap(&other->state_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  reason_.Swap(&other->reason_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata BlockValidationState::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class NewPoWValidBlock::_Internal {
 public:
};

NewPoWValidBlock::NewPoWValidBlock(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:plugin_grpc.NewPoWValidBlock)
}
NewPoWValidBlock::NewPoWValidBlock(const NewPoWValidBlock& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  blockheader_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_blockheader().empty()) {
    blockheader_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_blockheader(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:plugin_grpc.NewPoWValidBlock)
}

void NewPoWValidBlock::SharedCtor() {
blockheader_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

NewPoWValidBlock::~NewPoWValidBlock() {
  // @@protoc_insertion_point(destructor:plugin_grpc.NewPoWValidBlock)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void NewPoWValidBlock::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  blockheader_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void NewPoWValidBlock::ArenaDtor(void* object) {
  NewPoWValidBlock* _this = reinterpret_cast< NewPoWValidBlock* >(object);
  (void)_this;
}
void NewPoWValidBlock::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void NewPoWValidBlock::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void NewPoWValidBlock::Clear() {
// @@protoc_insertion_point(message_clear_start:plugin_grpc.NewPoWValidBlock)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  blockheader_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NewPoWValidBlock::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes blockheader = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_blockheader();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* NewPoWValidBlock::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:plugin_grpc.NewPoWValidBlock)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes blockheader = 1;
  if (this->blockheader().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_blockheader(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plugin_grpc.NewPoWValidBlock)
  return target;
}

size_t NewPoWValidBlock::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plugin_grpc.NewPoWValidBlock)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes blockheader = 1;
  if (this->blockheader().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_blockheader());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NewPoWValidBlock::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plugin_grpc.NewPoWValidBlock)
  GOOGLE_DCHECK_NE(&from, this);
  const NewPoWValidBlock* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<NewPoWValidBlock>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plugin_grpc.NewPoWValidBlock)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plugin_grpc.NewPoWValidBlock)
    MergeFrom(*source);
  }
}

void NewPoWValidBlock::MergeFrom(const NewPoWValidBlock& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plugin_grpc.NewPoWValidBlock)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.blockheader().size() > 0) {
    _internal_set_blockheader(from._internal_blockheader());
  }
}

void NewPoWValidBlock::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plugin_grpc.NewPoWValidBlock)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NewPoWValidBlock::CopyFrom(const NewPoWValidBlock& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plugin_grpc.NewPoWValidBlock)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NewPoWValidBlock::IsInitialized() const {
  return true;
}

void NewPoWValidBlock::InternalSwap(NewPoWValidBlock* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  blockheader_.Swap(&other->blockheader_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata NewPoWValidBlock::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetBlockRequest::_Internal {
 public:
  static const ::plugin_grpc::BlockIdentifier& block_id(const GetBlockRequest* msg);
};

const ::plugin_grpc::BlockIdentifier&
GetBlockRequest::_Internal::block_id(const GetBlockRequest* msg) {
  return *msg->block_id_;
}
GetBlockRequest::GetBlockRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:plugin_grpc.GetBlockRequest)
}
GetBlockRequest::GetBlockRequest(const GetBlockRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_block_id()) {
    block_id_ = new ::plugin_grpc::BlockIdentifier(*from.block_id_);
  } else {
    block_id_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:plugin_grpc.GetBlockRequest)
}

void GetBlockRequest::SharedCtor() {
block_id_ = nullptr;
}

GetBlockRequest::~GetBlockRequest() {
  // @@protoc_insertion_point(destructor:plugin_grpc.GetBlockRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetBlockRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete block_id_;
}

void GetBlockRequest::ArenaDtor(void* object) {
  GetBlockRequest* _this = reinterpret_cast< GetBlockRequest* >(object);
  (void)_this;
}
void GetBlockRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetBlockRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetBlockRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:plugin_grpc.GetBlockRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && block_id_ != nullptr) {
    delete block_id_;
  }
  block_id_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetBlockRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .plugin_grpc.BlockIdentifier block_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_block_id(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetBlockRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:plugin_grpc.GetBlockRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .plugin_grpc.BlockIdentifier block_id = 1;
  if (this->has_block_id()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::block_id(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plugin_grpc.GetBlockRequest)
  return target;
}

size_t GetBlockRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plugin_grpc.GetBlockRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .plugin_grpc.BlockIdentifier block_id = 1;
  if (this->has_block_id()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *block_id_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetBlockRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plugin_grpc.GetBlockRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetBlockRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetBlockRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plugin_grpc.GetBlockRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plugin_grpc.GetBlockRequest)
    MergeFrom(*source);
  }
}

void GetBlockRequest::MergeFrom(const GetBlockRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plugin_grpc.GetBlockRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_block_id()) {
    _internal_mutable_block_id()->::plugin_grpc::BlockIdentifier::MergeFrom(from._internal_block_id());
  }
}

void GetBlockRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plugin_grpc.GetBlockRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetBlockRequest::CopyFrom(const GetBlockRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plugin_grpc.GetBlockRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBlockRequest::IsInitialized() const {
  return true;
}

void GetBlockRequest::InternalSwap(GetBlockRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(block_id_, other->block_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetBlockRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetBlockResponse::_Internal {
 public:
  static const ::plugin_grpc::Block& block(const GetBlockResponse* msg);
};

const ::plugin_grpc::Block&
GetBlockResponse::_Internal::block(const GetBlockResponse* msg) {
  return *msg->block_;
}
GetBlockResponse::GetBlockResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:plugin_grpc.GetBlockResponse)
}
GetBlockResponse::GetBlockResponse(const GetBlockResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_block()) {
    block_ = new ::plugin_grpc::Block(*from.block_);
  } else {
    block_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:plugin_grpc.GetBlockResponse)
}

void GetBlockResponse::SharedCtor() {
block_ = nullptr;
}

GetBlockResponse::~GetBlockResponse() {
  // @@protoc_insertion_point(destructor:plugin_grpc.GetBlockResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetBlockResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete block_;
}

void GetBlockResponse::ArenaDtor(void* object) {
  GetBlockResponse* _this = reinterpret_cast< GetBlockResponse* >(object);
  (void)_this;
}
void GetBlockResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetBlockResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetBlockResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:plugin_grpc.GetBlockResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && block_ != nullptr) {
    delete block_;
  }
  block_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetBlockResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .plugin_grpc.Block block = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_block(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetBlockResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:plugin_grpc.GetBlockResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .plugin_grpc.Block block = 1;
  if (this->has_block()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::block(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plugin_grpc.GetBlockResponse)
  return target;
}

size_t GetBlockResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plugin_grpc.GetBlockResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .plugin_grpc.Block block = 1;
  if (this->has_block()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *block_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetBlockResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plugin_grpc.GetBlockResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetBlockResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetBlockResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plugin_grpc.GetBlockResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plugin_grpc.GetBlockResponse)
    MergeFrom(*source);
  }
}

void GetBlockResponse::MergeFrom(const GetBlockResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plugin_grpc.GetBlockResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_block()) {
    _internal_mutable_block()->::plugin_grpc::Block::MergeFrom(from._internal_block());
  }
}

void GetBlockResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plugin_grpc.GetBlockResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetBlockResponse::CopyFrom(const GetBlockResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plugin_grpc.GetBlockResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBlockResponse::IsInitialized() const {
  return true;
}

void GetBlockResponse::InternalSwap(GetBlockResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(block_, other->block_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetBlockResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetBlockUndoDataRequest::_Internal {
 public:
  static const ::plugin_grpc::BlockIdentifier& block_id(const GetBlockUndoDataRequest* msg);
};

const ::plugin_grpc::BlockIdentifier&
GetBlockUndoDataRequest::_Internal::block_id(const GetBlockUndoDataRequest* msg) {
  return *msg->block_id_;
}
GetBlockUndoDataRequest::GetBlockUndoDataRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:plugin_grpc.GetBlockUndoDataRequest)
}
GetBlockUndoDataRequest::GetBlockUndoDataRequest(const GetBlockUndoDataRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_block_id()) {
    block_id_ = new ::plugin_grpc::BlockIdentifier(*from.block_id_);
  } else {
    block_id_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:plugin_grpc.GetBlockUndoDataRequest)
}

void GetBlockUndoDataRequest::SharedCtor() {
block_id_ = nullptr;
}

GetBlockUndoDataRequest::~GetBlockUndoDataRequest() {
  // @@protoc_insertion_point(destructor:plugin_grpc.GetBlockUndoDataRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetBlockUndoDataRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete block_id_;
}

void GetBlockUndoDataRequest::ArenaDtor(void* object) {
  GetBlockUndoDataRequest* _this = reinterpret_cast< GetBlockUndoDataRequest* >(object);
  (void)_this;
}
void GetBlockUndoDataRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetBlockUndoDataRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetBlockUndoDataRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:plugin_grpc.GetBlockUndoDataRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && block_id_ != nullptr) {
    delete block_id_;
  }
  block_id_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetBlockUndoDataRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .plugin_grpc.BlockIdentifier block_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_block_id(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetBlockUndoDataRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:plugin_grpc.GetBlockUndoDataRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .plugin_grpc.BlockIdentifier block_id = 1;
  if (this->has_block_id()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::block_id(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plugin_grpc.GetBlockUndoDataRequest)
  return target;
}

size_t GetBlockUndoDataRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plugin_grpc.GetBlockUndoDataRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .plugin_grpc.BlockIdentifier block_id = 1;
  if (this->has_block_id()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *block_id_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetBlockUndoDataRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plugin_grpc.GetBlockUndoDataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetBlockUndoDataRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetBlockUndoDataRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plugin_grpc.GetBlockUndoDataRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plugin_grpc.GetBlockUndoDataRequest)
    MergeFrom(*source);
  }
}

void GetBlockUndoDataRequest::MergeFrom(const GetBlockUndoDataRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plugin_grpc.GetBlockUndoDataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_block_id()) {
    _internal_mutable_block_id()->::plugin_grpc::BlockIdentifier::MergeFrom(from._internal_block_id());
  }
}

void GetBlockUndoDataRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plugin_grpc.GetBlockUndoDataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetBlockUndoDataRequest::CopyFrom(const GetBlockUndoDataRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plugin_grpc.GetBlockUndoDataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBlockUndoDataRequest::IsInitialized() const {
  return true;
}

void GetBlockUndoDataRequest::InternalSwap(GetBlockUndoDataRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(block_id_, other->block_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetBlockUndoDataRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetBlockUndoDataResponse::_Internal {
 public:
};

GetBlockUndoDataResponse::GetBlockUndoDataResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  coins_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:plugin_grpc.GetBlockUndoDataResponse)
}
GetBlockUndoDataResponse::GetBlockUndoDataResponse(const GetBlockUndoDataResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      coins_(from.coins_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:plugin_grpc.GetBlockUndoDataResponse)
}

void GetBlockUndoDataResponse::SharedCtor() {
}

GetBlockUndoDataResponse::~GetBlockUndoDataResponse() {
  // @@protoc_insertion_point(destructor:plugin_grpc.GetBlockUndoDataResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetBlockUndoDataResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetBlockUndoDataResponse::ArenaDtor(void* object) {
  GetBlockUndoDataResponse* _this = reinterpret_cast< GetBlockUndoDataResponse* >(object);
  (void)_this;
}
void GetBlockUndoDataResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetBlockUndoDataResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetBlockUndoDataResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:plugin_grpc.GetBlockUndoDataResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  coins_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetBlockUndoDataResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .plugin_grpc.Coin coins = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_coins(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetBlockUndoDataResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:plugin_grpc.GetBlockUndoDataResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .plugin_grpc.Coin coins = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_coins_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_coins(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plugin_grpc.GetBlockUndoDataResponse)
  return target;
}

size_t GetBlockUndoDataResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plugin_grpc.GetBlockUndoDataResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .plugin_grpc.Coin coins = 1;
  total_size += 1UL * this->_internal_coins_size();
  for (const auto& msg : this->coins_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetBlockUndoDataResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plugin_grpc.GetBlockUndoDataResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetBlockUndoDataResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetBlockUndoDataResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plugin_grpc.GetBlockUndoDataResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plugin_grpc.GetBlockUndoDataResponse)
    MergeFrom(*source);
  }
}

void GetBlockUndoDataResponse::MergeFrom(const GetBlockUndoDataResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plugin_grpc.GetBlockUndoDataResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  coins_.MergeFrom(from.coins_);
}

void GetBlockUndoDataResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plugin_grpc.GetBlockUndoDataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetBlockUndoDataResponse::CopyFrom(const GetBlockUndoDataResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plugin_grpc.GetBlockUndoDataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBlockUndoDataResponse::IsInitialized() const {
  return true;
}

void GetBlockUndoDataResponse::InternalSwap(GetBlockUndoDataResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  coins_.InternalSwap(&other->coins_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetBlockUndoDataResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetMempoolRequest::_Internal {
 public:
};

GetMempoolRequest::GetMempoolRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:plugin_grpc.GetMempoolRequest)
}
GetMempoolRequest::GetMempoolRequest(const GetMempoolRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:plugin_grpc.GetMempoolRequest)
}

void GetMempoolRequest::SharedCtor() {
}

GetMempoolRequest::~GetMempoolRequest() {
  // @@protoc_insertion_point(destructor:plugin_grpc.GetMempoolRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetMempoolRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetMempoolRequest::ArenaDtor(void* object) {
  GetMempoolRequest* _this = reinterpret_cast< GetMempoolRequest* >(object);
  (void)_this;
}
void GetMempoolRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetMempoolRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetMempoolRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:plugin_grpc.GetMempoolRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetMempoolRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetMempoolRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:plugin_grpc.GetMempoolRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plugin_grpc.GetMempoolRequest)
  return target;
}

size_t GetMempoolRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plugin_grpc.GetMempoolRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetMempoolRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plugin_grpc.GetMempoolRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetMempoolRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetMempoolRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plugin_grpc.GetMempoolRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plugin_grpc.GetMempoolRequest)
    MergeFrom(*source);
  }
}

void GetMempoolRequest::MergeFrom(const GetMempoolRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plugin_grpc.GetMempoolRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetMempoolRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plugin_grpc.GetMempoolRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetMempoolRequest::CopyFrom(const GetMempoolRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plugin_grpc.GetMempoolRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetMempoolRequest::IsInitialized() const {
  return true;
}

void GetMempoolRequest::InternalSwap(GetMempoolRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetMempoolRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetMempoolResponse::_Internal {
 public:
};

GetMempoolResponse::GetMempoolResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  txs_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:plugin_grpc.GetMempoolResponse)
}
GetMempoolResponse::GetMempoolResponse(const GetMempoolResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      txs_(from.txs_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:plugin_grpc.GetMempoolResponse)
}

void GetMempoolResponse::SharedCtor() {
}

GetMempoolResponse::~GetMempoolResponse() {
  // @@protoc_insertion_point(destructor:plugin_grpc.GetMempoolResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetMempoolResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetMempoolResponse::ArenaDtor(void* object) {
  GetMempoolResponse* _this = reinterpret_cast< GetMempoolResponse* >(object);
  (void)_this;
}
void GetMempoolResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetMempoolResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetMempoolResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:plugin_grpc.GetMempoolResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  txs_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetMempoolResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .plugin_grpc.MempoolTx txs = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_txs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetMempoolResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:plugin_grpc.GetMempoolResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .plugin_grpc.MempoolTx txs = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_txs_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_txs(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plugin_grpc.GetMempoolResponse)
  return target;
}

size_t GetMempoolResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plugin_grpc.GetMempoolResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .plugin_grpc.MempoolTx txs = 1;
  total_size += 1UL * this->_internal_txs_size();
  for (const auto& msg : this->txs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetMempoolResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plugin_grpc.GetMempoolResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetMempoolResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetMempoolResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plugin_grpc.GetMempoolResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plugin_grpc.GetMempoolResponse)
    MergeFrom(*source);
  }
}

void GetMempoolResponse::MergeFrom(const GetMempoolResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plugin_grpc.GetMempoolResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  txs_.MergeFrom(from.txs_);
}

void GetMempoolResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plugin_grpc.GetMempoolResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetMempoolResponse::CopyFrom(const GetMempoolResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plugin_grpc.GetMempoolResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetMempoolResponse::IsInitialized() const {
  return true;
}

void GetMempoolResponse::InternalSwap(GetMempoolResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  txs_.InternalSwap(&other->txs_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetMempoolResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class MempoolTx::_Internal {
 public:
};

MempoolTx::MempoolTx(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:plugin_grpc.MempoolTx)
}
MempoolTx::MempoolTx(const MempoolTx& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  tx_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_tx().empty()) {
    tx_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_tx(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:plugin_grpc.MempoolTx)
}

void MempoolTx::SharedCtor() {
tx_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

MempoolTx::~MempoolTx() {
  // @@protoc_insertion_point(destructor:plugin_grpc.MempoolTx)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MempoolTx::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  tx_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void MempoolTx::ArenaDtor(void* object) {
  MempoolTx* _this = reinterpret_cast< MempoolTx* >(object);
  (void)_this;
}
void MempoolTx::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MempoolTx::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void MempoolTx::Clear() {
// @@protoc_insertion_point(message_clear_start:plugin_grpc.MempoolTx)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tx_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MempoolTx::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes tx = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_tx();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MempoolTx::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:plugin_grpc.MempoolTx)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes tx = 1;
  if (this->tx().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_tx(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plugin_grpc.MempoolTx)
  return target;
}

size_t MempoolTx::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plugin_grpc.MempoolTx)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes tx = 1;
  if (this->tx().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_tx());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MempoolTx::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plugin_grpc.MempoolTx)
  GOOGLE_DCHECK_NE(&from, this);
  const MempoolTx* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MempoolTx>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plugin_grpc.MempoolTx)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plugin_grpc.MempoolTx)
    MergeFrom(*source);
  }
}

void MempoolTx::MergeFrom(const MempoolTx& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plugin_grpc.MempoolTx)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.tx().size() > 0) {
    _internal_set_tx(from._internal_tx());
  }
}

void MempoolTx::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plugin_grpc.MempoolTx)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MempoolTx::CopyFrom(const MempoolTx& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plugin_grpc.MempoolTx)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MempoolTx::IsInitialized() const {
  return true;
}

void MempoolTx::InternalSwap(MempoolTx* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  tx_.Swap(&other->tx_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata MempoolTx::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace plugin_grpc
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::plugin_grpc::MessageSubscribeTo* Arena::CreateMaybeMessage< ::plugin_grpc::MessageSubscribeTo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::plugin_grpc::MessageSubscribeTo >(arena);
}
template<> PROTOBUF_NOINLINE ::plugin_grpc::Message* Arena::CreateMaybeMessage< ::plugin_grpc::Message >(Arena* arena) {
  return Arena::CreateMessageInternal< ::plugin_grpc::Message >(arena);
}
template<> PROTOBUF_NOINLINE ::plugin_grpc::Block* Arena::CreateMaybeMessage< ::plugin_grpc::Block >(Arena* arena) {
  return Arena::CreateMessageInternal< ::plugin_grpc::Block >(arena);
}
template<> PROTOBUF_NOINLINE ::plugin_grpc::Coin* Arena::CreateMaybeMessage< ::plugin_grpc::Coin >(Arena* arena) {
  return Arena::CreateMessageInternal< ::plugin_grpc::Coin >(arena);
}
template<> PROTOBUF_NOINLINE ::plugin_grpc::BlockMetadata* Arena::CreateMaybeMessage< ::plugin_grpc::BlockMetadata >(Arena* arena) {
  return Arena::CreateMessageInternal< ::plugin_grpc::BlockMetadata >(arena);
}
template<> PROTOBUF_NOINLINE ::plugin_grpc::BlockIdentifier* Arena::CreateMaybeMessage< ::plugin_grpc::BlockIdentifier >(Arena* arena) {
  return Arena::CreateMessageInternal< ::plugin_grpc::BlockIdentifier >(arena);
}
template<> PROTOBUF_NOINLINE ::plugin_grpc::UpdatedBlockTip* Arena::CreateMaybeMessage< ::plugin_grpc::UpdatedBlockTip >(Arena* arena) {
  return Arena::CreateMessageInternal< ::plugin_grpc::UpdatedBlockTip >(arena);
}
template<> PROTOBUF_NOINLINE ::plugin_grpc::TransactionAddedToMempool* Arena::CreateMaybeMessage< ::plugin_grpc::TransactionAddedToMempool >(Arena* arena) {
  return Arena::CreateMessageInternal< ::plugin_grpc::TransactionAddedToMempool >(arena);
}
template<> PROTOBUF_NOINLINE ::plugin_grpc::TransactionRemovedFromMempool* Arena::CreateMaybeMessage< ::plugin_grpc::TransactionRemovedFromMempool >(Arena* arena) {
  return Arena::CreateMessageInternal< ::plugin_grpc::TransactionRemovedFromMempool >(arena);
}
template<> PROTOBUF_NOINLINE ::plugin_grpc::BlockConnected* Arena::CreateMaybeMessage< ::plugin_grpc::BlockConnected >(Arena* arena) {
  return Arena::CreateMessageInternal< ::plugin_grpc::BlockConnected >(arena);
}
template<> PROTOBUF_NOINLINE ::plugin_grpc::BlockDisconnected* Arena::CreateMaybeMessage< ::plugin_grpc::BlockDisconnected >(Arena* arena) {
  return Arena::CreateMessageInternal< ::plugin_grpc::BlockDisconnected >(arena);
}
template<> PROTOBUF_NOINLINE ::plugin_grpc::ChainStateFlushed* Arena::CreateMaybeMessage< ::plugin_grpc::ChainStateFlushed >(Arena* arena) {
  return Arena::CreateMessageInternal< ::plugin_grpc::ChainStateFlushed >(arena);
}
template<> PROTOBUF_NOINLINE ::plugin_grpc::BlockChecked* Arena::CreateMaybeMessage< ::plugin_grpc::BlockChecked >(Arena* arena) {
  return Arena::CreateMessageInternal< ::plugin_grpc::BlockChecked >(arena);
}
template<> PROTOBUF_NOINLINE ::plugin_grpc::BlockValidationState* Arena::CreateMaybeMessage< ::plugin_grpc::BlockValidationState >(Arena* arena) {
  return Arena::CreateMessageInternal< ::plugin_grpc::BlockValidationState >(arena);
}
template<> PROTOBUF_NOINLINE ::plugin_grpc::NewPoWValidBlock* Arena::CreateMaybeMessage< ::plugin_grpc::NewPoWValidBlock >(Arena* arena) {
  return Arena::CreateMessageInternal< ::plugin_grpc::NewPoWValidBlock >(arena);
}
template<> PROTOBUF_NOINLINE ::plugin_grpc::GetBlockRequest* Arena::CreateMaybeMessage< ::plugin_grpc::GetBlockRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::plugin_grpc::GetBlockRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::plugin_grpc::GetBlockResponse* Arena::CreateMaybeMessage< ::plugin_grpc::GetBlockResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::plugin_grpc::GetBlockResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::plugin_grpc::GetBlockUndoDataRequest* Arena::CreateMaybeMessage< ::plugin_grpc::GetBlockUndoDataRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::plugin_grpc::GetBlockUndoDataRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::plugin_grpc::GetBlockUndoDataResponse* Arena::CreateMaybeMessage< ::plugin_grpc::GetBlockUndoDataResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::plugin_grpc::GetBlockUndoDataResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::plugin_grpc::GetMempoolRequest* Arena::CreateMaybeMessage< ::plugin_grpc::GetMempoolRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::plugin_grpc::GetMempoolRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::plugin_grpc::GetMempoolResponse* Arena::CreateMaybeMessage< ::plugin_grpc::GetMempoolResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::plugin_grpc::GetMempoolResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::plugin_grpc::MempoolTx* Arena::CreateMaybeMessage< ::plugin_grpc::MempoolTx >(Arena* arena) {
  return Arena::CreateMessageInternal< ::plugin_grpc::MempoolTx >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
